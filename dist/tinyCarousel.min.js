/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
/*!************************************!*\
  !*** ./src/tinyCarousel.plugin.js ***!
  \************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const TinyCarousel = function (paramOptions) {
    const AUTO_MOVE_TIME_MS = 5000;
    const defaultOptions = {
        sliderSelector: '.jslider',
        itemSelector: '.jitem',
        loop: true,
        autoMove: true
    };
    const options = Object.assign({}, defaultOptions, paramOptions);
    let currentItem = getsliderItems()[0];
    let autoMoveTimer;

    if (options.loop){
        configureLoop();
    }

    if (options.autoMove){
        initAutoMoveTimer();
    }


    function configureLoop(){
        //TODO
    }

    function initAutoMoveTimer(){
        clearTimeout(autoMoveTimer);
        autoMoveTimer = setInterval(viewNextItem, AUTO_MOVE_TIME_MS);
    }

    function viewNextItem(){
        let nextCandidate = currentItem.nextElementSibling;
        if (nextCandidate){
            currentItem = getsliderItems()[0];
        }
        viewItem(currentItem);
    }

    function viewItem(element) {
        let widthToScroll = 0;

        const allItems = getsliderItems();
        if (allItems?.length){
            for (const item of allItems) {
                if (item == element) {
                    break;
                } else {
                    widthToScroll += outerWidthWithMargin(item);
                }
            }
        }

        animateLeft(widthToScroll);
    }

    function animateLeft(widthToScroll){
        getSlider().scroll({
            left: widthToScroll,
            behavior: 'smooth'
        });
    }

    function getSlider(){
        return document.querySelector(options.sliderSelector);
    }

    function getsliderItems(){
        return getSlider().querySelectorAll(options.itemSelector);
    }

    function outerWidthWithMargin(el) {
        var width = el.offsetWidth;
        var style = getComputedStyle(el);
      
        width += parseInt(style.marginLeft) + parseInt(style.marginRight);
        return width;
    }

    return {
        //Test public functions
        getSlider,
        getsliderItems,
        viewItem
    };
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TinyCarousel);
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlueUNhcm91c2VsLm1pbi5qcyIsIm1hcHBpbmdzIjoiOztVQUFBO1VBQ0E7Ozs7O1dDREE7V0FDQTtXQUNBO1dBQ0E7V0FDQSx5Q0FBeUMsd0NBQXdDO1dBQ2pGO1dBQ0E7V0FDQTs7Ozs7V0NQQTs7Ozs7V0NBQTtXQUNBO1dBQ0E7V0FDQSx1REFBdUQsaUJBQWlCO1dBQ3hFO1dBQ0EsZ0RBQWdELGFBQWE7V0FDN0Q7Ozs7Ozs7Ozs7OztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxZQUFZLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aW55LWNhcm91c2VsL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3RpbnktY2Fyb3VzZWwvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RpbnktY2Fyb3VzZWwvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90aW55LWNhcm91c2VsL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vdGlueS1jYXJvdXNlbC8uL3NyYy90aW55Q2Fyb3VzZWwucGx1Z2luLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiY29uc3QgVGlueUNhcm91c2VsID0gZnVuY3Rpb24gKHBhcmFtT3B0aW9ucykge1xyXG4gICAgY29uc3QgQVVUT19NT1ZFX1RJTUVfTVMgPSA1MDAwO1xyXG4gICAgY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7XHJcbiAgICAgICAgc2xpZGVyU2VsZWN0b3I6ICcuanNsaWRlcicsXHJcbiAgICAgICAgaXRlbVNlbGVjdG9yOiAnLmppdGVtJyxcclxuICAgICAgICBsb29wOiB0cnVlLFxyXG4gICAgICAgIGF1dG9Nb3ZlOiB0cnVlXHJcbiAgICB9O1xyXG4gICAgY29uc3Qgb3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRPcHRpb25zLCBwYXJhbU9wdGlvbnMpO1xyXG4gICAgbGV0IGN1cnJlbnRJdGVtID0gZ2V0c2xpZGVySXRlbXMoKVswXTtcclxuICAgIGxldCBhdXRvTW92ZVRpbWVyO1xyXG5cclxuICAgIGlmIChvcHRpb25zLmxvb3Ape1xyXG4gICAgICAgIGNvbmZpZ3VyZUxvb3AoKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAob3B0aW9ucy5hdXRvTW92ZSl7XHJcbiAgICAgICAgaW5pdEF1dG9Nb3ZlVGltZXIoKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgZnVuY3Rpb24gY29uZmlndXJlTG9vcCgpe1xyXG4gICAgICAgIC8vVE9ET1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGluaXRBdXRvTW92ZVRpbWVyKCl7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KGF1dG9Nb3ZlVGltZXIpO1xyXG4gICAgICAgIGF1dG9Nb3ZlVGltZXIgPSBzZXRJbnRlcnZhbCh2aWV3TmV4dEl0ZW0sIEFVVE9fTU9WRV9USU1FX01TKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB2aWV3TmV4dEl0ZW0oKXtcclxuICAgICAgICBsZXQgbmV4dENhbmRpZGF0ZSA9IGN1cnJlbnRJdGVtLm5leHRFbGVtZW50U2libGluZztcclxuICAgICAgICBpZiAobmV4dENhbmRpZGF0ZSl7XHJcbiAgICAgICAgICAgIGN1cnJlbnRJdGVtID0gZ2V0c2xpZGVySXRlbXMoKVswXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmlld0l0ZW0oY3VycmVudEl0ZW0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHZpZXdJdGVtKGVsZW1lbnQpIHtcclxuICAgICAgICBsZXQgd2lkdGhUb1Njcm9sbCA9IDA7XHJcblxyXG4gICAgICAgIGNvbnN0IGFsbEl0ZW1zID0gZ2V0c2xpZGVySXRlbXMoKTtcclxuICAgICAgICBpZiAoYWxsSXRlbXM/Lmxlbmd0aCl7XHJcbiAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiBhbGxJdGVtcykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0gPT0gZWxlbWVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aFRvU2Nyb2xsICs9IG91dGVyV2lkdGhXaXRoTWFyZ2luKGl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhbmltYXRlTGVmdCh3aWR0aFRvU2Nyb2xsKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBhbmltYXRlTGVmdCh3aWR0aFRvU2Nyb2xsKXtcclxuICAgICAgICBnZXRTbGlkZXIoKS5zY3JvbGwoe1xyXG4gICAgICAgICAgICBsZWZ0OiB3aWR0aFRvU2Nyb2xsLFxyXG4gICAgICAgICAgICBiZWhhdmlvcjogJ3Ntb290aCdcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRTbGlkZXIoKXtcclxuICAgICAgICByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihvcHRpb25zLnNsaWRlclNlbGVjdG9yKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBnZXRzbGlkZXJJdGVtcygpe1xyXG4gICAgICAgIHJldHVybiBnZXRTbGlkZXIoKS5xdWVyeVNlbGVjdG9yQWxsKG9wdGlvbnMuaXRlbVNlbGVjdG9yKTtcclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBvdXRlcldpZHRoV2l0aE1hcmdpbihlbCkge1xyXG4gICAgICAgIHZhciB3aWR0aCA9IGVsLm9mZnNldFdpZHRoO1xyXG4gICAgICAgIHZhciBzdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoZWwpO1xyXG4gICAgICBcclxuICAgICAgICB3aWR0aCArPSBwYXJzZUludChzdHlsZS5tYXJnaW5MZWZ0KSArIHBhcnNlSW50KHN0eWxlLm1hcmdpblJpZ2h0KTtcclxuICAgICAgICByZXR1cm4gd2lkdGg7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICAvL1Rlc3QgcHVibGljIGZ1bmN0aW9uc1xyXG4gICAgICAgIGdldFNsaWRlcixcclxuICAgICAgICBnZXRzbGlkZXJJdGVtcyxcclxuICAgICAgICB2aWV3SXRlbVxyXG4gICAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFRpbnlDYXJvdXNlbDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=